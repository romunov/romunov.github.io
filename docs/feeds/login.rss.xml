<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Biolitika - login</title><link>https://biolitika.si/</link><description></description><lastBuildDate>Sat, 16 Mar 2019 00:00:00 +0100</lastBuildDate><item><title>How I implemented googleSignIn in R (shiny) and lived</title><link>https://biolitika.si/how-i-implemented-googlesignin-in-r-shiny-and-lived.html</link><description>&lt;p&gt;Known user identity when building shiny apps can sometimes come really handy. While you can implement your own user login, for instance &lt;a href="https://calligross.de/post/using-cookie-based-authentication-with-shiny/"&gt;using cookies&lt;/a&gt;, you can also use some of the services which authenticate a user for you, such as Google. This way, you don't have to handle cookies or passwords, just a small part of bureaucracy in your database.&lt;/p&gt;
&lt;p&gt;Enter &lt;a href="https://code.markedmondson.me/googleAuthR/"&gt;googleAuthR&lt;/a&gt;. You can use the Google Authentication system, which enables you to call its APIs (e.g. see &lt;a href="https://lesliemyint.wordpress.com/2017/01/01/creating-a-shiny-app-with-google-login/"&gt;here&lt;/a&gt;), but sometimes a user login is just enough. This is where the accompanying module &lt;code&gt;googleSignIn&lt;/code&gt; comes into play. Below is how I was able to implement this same name module with four lines of code, one line being loading the aforementioned library.&lt;/p&gt;
&lt;p&gt;If you would be kind enough to scroll to the &lt;a href="https://code.markedmondson.me/googleAuthR/articles/google-authentication-types.html#googlesignin-module-example"&gt;&lt;code&gt;googleSignIn&lt;/code&gt;&lt;/a&gt; part of the page, you will notice code for a shiny app that (almost) just works. Read on to see what I mean by "almost".&lt;/p&gt;
&lt;p&gt;The demo app has all the key components, it loads libraries, prepares &lt;code&gt;options("client_id")&lt;/code&gt;, creates sign in button in &lt;code&gt;ui&lt;/code&gt; (&lt;code&gt;googleSignInUI("demo")&lt;/code&gt;), does the auth dance for you in the &lt;code&gt;server&lt;/code&gt; part (&lt;code&gt;shiny::callModule(googleSignIn, "demo")&lt;/code&gt;) when this button is pressed and, as gratis, displays the name, email and your google image. I run the app using &lt;code&gt;runApp(port = 1221)&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;&lt;img src="https://biolitika.si/images/googlesignin_app.png" class="center"&gt;&lt;/p&gt;
&lt;p&gt;When I press the Sign in button, I get - bleh. Doesn't work.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://biolitika.si/images/googlesingin_invalid_request.png" class="center"&gt;&lt;/p&gt;
&lt;p&gt;What is going on? The google console parameters check out.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://biolitika.si/images/googlesingin_console_restrictions.png" class="center"&gt;&lt;/p&gt;
&lt;p&gt;Let me save you hours of clicking by pointing out this little bit from the documentation from the &lt;a href="https://code.markedmondson.me/googleAuthR/articles/google-authentication-types.html#googleauth-module-example"&gt;&lt;code&gt;googleAuth&lt;/code&gt; module&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;... then make sure if you launch your app locally to change the ip address from &lt;code&gt;127.0.0.1&lt;/code&gt; to &lt;code&gt;localhost&lt;/code&gt; in your browser (Google doesn’t accept ip addresses).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In other words, in your web browser, just change &lt;code&gt;http://127.0.0.1:1221&lt;/code&gt; to &lt;code&gt;http://localhost:1221&lt;/code&gt;. The page should reload on its own. Click the sign in button et voilà.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://biolitika.si/images/googlesignin_signedin.png" class="center"&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Roman Luštrik</dc:creator><pubDate>Sat, 16 Mar 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:biolitika.si,2019-03-16:/how-i-implemented-googlesignin-in-r-shiny-and-lived.html</guid><category>HowTo</category><category>R</category><category>google</category><category>login</category><category>googleAuthR</category><category>shiny</category><category>oauth2</category></item></channel></rss>